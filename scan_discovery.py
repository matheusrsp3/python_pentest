#!/usr/bin/python3
#
# scan_discovery.py - Programa para fazer uma listagem de diretórios em um site
#
# Autor     : Matheus Rodrigues (mcarvalho)
# Manutenção: Matheus Rodrigues (mcarvalho)
# Contato   : matheusrsp3@gmail.com
#
# ---------------------------------------------------------------------------------------
# Descrição do programa:
#   Descreva aqui em baixo como o programa funciona detalhadamente
# 
# Exemplos:
#   $ ./scan_discovery.py
#
# ---------------------------------------------------------------------------------------
# Histórico:
#   v1.0 dd/mm/aaaa, autor
#   - Descreva oque tem nesta versão em tópicos
#   - Foi mudado o layout do programa
#   - Foi acrescentado uma nova função ao programa
#
# ---------------------------------------------------------------------------------------
# Testado:
#    Sistema Operacional - Linux Mint 21.1
#    Arquitetura         - x86-64
#    Versão Kernel       - Linux 5.15.0-78-generic
#    Versão Bash         - 5.1.16
#
# ---------------------------------------------------------------------------------------
# -------------------------------- Importação de Pacotes --------------------------------
import re

# Verificando se não vai ocorrer nenhum erro pela falta do pacote [requests]
try:
    import requests
except (ModuleNotFoundError):
    print(f'O pacote [requests] não foi encontrado!')
    exit(1)

# Verificando se não vai ocorrer nenhum erro pela falta do pacote [pyfiglet]
try:
    import pyfiglet
except (ModuleNotFoundError):
    print(f'O pacote [pyfiglet] não foi encontrado!')
    exit(1)

# ---------------------------------- Variaveis Globais ----------------------------------
coresPrograma = {
    'vermelho': '\033[31;1m',
    'verde': '\033[32;1m',
    'normal': '\033[m'
}

tituloPrograma = pyfiglet.figlet_format('Directory-Listing')

cabecalhoDoPrograma = f'''
{'#' * 40}
#{coresPrograma["vermelho"]}{'Exemplo de uso do programa:':^38}{coresPrograma["normal"]}#
#{'':^38}#
#{' Site: https://meusite.com':<38}#
#{' Wordlist: ./caminho_da_wordlist':<38}#
#{'':^38}#
{'#' * 40}
'''

# --------------------------------------- Funções ---------------------------------------
def removerBarraFinalDaUrl(url):
    return re.sub(r'/{1,}$', '', url)

# --------------------------------- Execução do Programa ---------------------------------
print(tituloPrograma, cabecalhoDoPrograma)

# Site que vai ser realizado o directory listing
siteParaListagem = input('Site: ') or 'nenhum site foi informado' 
# Removendo qualquer barra inadequada que o usuário possa ter colocado no final da URL
siteParaListagem = removerBarraFinalDaUrl(siteParaListagem)
# Wordlist que o usuário deve passar para o programa
wordlistParaBusca = input('Wordlist: ') or 'nenhum arquivo foi informado' 

print()

# Try para verificar se o arquivo que o usuário informou como wordlist existe
try:
    arquivoDeWordlist = open(wordlistParaBusca)
except (FileNotFoundError):
    print('Verifique o caminho do arquivo informado')
    print(f'Caminho do arquivo informado: {coresPrograma["vermelho"]}{wordlistParaBusca}{coresPrograma["normal"]}\n')
    exit(1)

try:
    for linhaWordlist in arquivoDeWordlist.readlines():
        # Substituindo o sinal de '%0A' que indica uma quebra de linha no arquivo
        linhaWordlist = linhaWordlist.replace('\n', '') 

        try:
            requisicao = requests.get(f'{siteParaListagem}/{linhaWordlist}')
        except:
            print('Verifique o caminho da URL informada')
            print(f'Caminho da URL informada: {coresPrograma["vermelho"]}{siteParaListagem}{coresPrograma["normal"]}\n')
            exit(1)
        if (requisicao.status_code == 200): # Status code HTTP 200 requisição bem sucedida
            print(f'{requisicao.url} - {coresPrograma["verde"]}Status Code: {requisicao.status_code}{coresPrograma["normal"]}')
        else: # Status code HTTP diferente de 200 requisição mal-sucedida
            print(f'{requisicao.url} - {coresPrograma["vermelho"]}Status Code: {requisicao.status_code}{coresPrograma["normal"]}')
except (KeyboardInterrupt): # Exceção caso o usuário de um CTRL-C no programa
    print('\nPrograma Encerrado...')
