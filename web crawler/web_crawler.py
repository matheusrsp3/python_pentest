#!/usr/bin/python3
#
# web_crawler.py - Programa para rastreador links
#
# Autor     : Matheus Rodrigues
# Manutenção: Matheus Rodrigues
# Contato   : matheusrsp3@gmail.com
#
# ---------------------------------------------------------------------------------------
# Descrição do programa:
#   Ferramenta desenvolvida para rastrear links na internet, a ferramenta vai partir de uma
#   URL informada pelo usuário inicialmente e depois vai varrer todos os links que encontrar
#   a partir dela de forma recursiva
#
# Exemplos:
#   $ ./web_crawler.py <url>
#
# ---------------------------------------------------------------------------------------
# Histórico:
#   v1.0 28/11/2023, Matheus Rodrigues
#   - Inicio do programa
#
# ---------------------------------------------------------------------------------------
# Testado:
#
#    Sistema Operacional - Kali GNU/Linux Rolling
#    Arquitetura         - x86-64
#    Versão Kernel       - Linux 6.5.0-kali3-amd64
#    Versão Bash         - 5.2.15
#
# -------------------------------- Importação de Pacotes --------------------------------
from bs4 import BeautifulSoup   # Biblioteca para manipular o HTML
import requests                 # Biblioteca para requisições web
import sys                      # Biblioteca para comandos do sistema
#
# ---------------------------------- Variaveis Globais ----------------------------------
paraRastrear = []   # Inicializando a lista que vai armazenar os links para serem rastreados
rastreados = set()  # Inicializando o conjunto que vai armazenar os links já rastreados
#
# --------------------------------- Execução do Programa ---------------------------------
def requisicao(url):
    cabecalho = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0'}
    try:
        resposta = requests.get(url, headers=cabecalho) # Fazendo a requisição na URL informada
        return resposta.text                            # Retornando o código HTML da página
    except KeyboardInterrupt:                           # CTRL-C encerra o programa
        sys.exit(0)
    except:
        pass


def obterLinks(html):
    links = []  # Inicializando lista que vai armazenar os links obtidos na página HTML
    try:
        soup = BeautifulSoup(html, 'html.parser')
        # Filtrando por todas tags <a></a> que tem o atributo href
        tagsA = soup.find_all("a", href=True)
        for tag in tagsA:
            link = tag['href']          # Extraindo somente os link da tag
            if link.startswith('http'): # Verificação "SIMPLES" de um link
                links.append(link)      # Se for um link adicione ao final da lista link

        return links                    # Retornando os links encontrados na página
    except:
        pass


def rastrear():
    while True:
        if paraRastrear:
            url = paraRastrear.pop()     # Obtendo a URL
            html = requisicao(url)       # Chamando a função que vai fazer a requisição
            if html:
                links = obterLinks(html) # Chamando a função que vai extrair os links da página HTML
                if links:
                    for link in links:
                        # Condição para não duplicar os links
                        if link not in rastreados and link not in paraRastrear:
                            # Adicionando o link para ser rastreado ao final da lista
                            paraRastrear.append(link)

                print('Crawling: {}'.format(url))

                ''' Adicionando a URL que já foi rastreada a lista de rastreados
                para que não seja rastreada novamente '''
                rastreados.add(url)
            else:
                rastreados.add(url)
        else: # Se não houver mais URLs para rastrear encerre o programa
            print('Done')
            break


if __name__ == '__main__':
    try:
        url = sys.argv[1] # Primeiro parâmetro informado ao programa sera a URL
    except:
        # Se o usuário não informar a primeira URL encerre o programa
        print('exemplo de uso: \n\tpython {} http://example.com'.format(sys.argv[0]))
        sys.exit(0)

    paraRastrear.append(url) # Adicionando a URL informada a lista paraRastrear
    rastrear()               # Chamando a função que vai iniciar o rastreamento da URL
