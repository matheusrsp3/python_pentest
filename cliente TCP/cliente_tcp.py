#!/usr/bin/python3
#
# cliente_tcp.py - Um cliente para realizar conexões TCP
#
# Autor     : Matheus Rodrigues (mcarvalho)
# Manutenção: Matheus Rodrigues (mcarvalho)
# Contato   : matheusrsp3@gmail.com
#
# ---------------------------------------------------------------------------------------
# Descrição do programa:
#   Descreva aqui em baixo como o programa funciona detalhadamente
# 
# Exemplos:
#   $ ./nome_do_programa.py parametro1
#   saida_tela?
#
# ---------------------------------------------------------------------------------------
# Histórico:
#   v1.0 dd/mm/aaaa, Matheus Rodrigues
#   - Inicio do programa
#
# ---------------------------------------------------------------------------------------
# Testado:
#    Sistema Operacional - Linux Mint 21.1
#    Arquitetura         - x86-64
#    Versão Kernel       - Linux 5.15.0-79-generic
#    Versão Bash         - 5.1.16
#
# ---------------------------------------------------------------------------------------
# -------------------------------- Importação de Pacotes --------------------------------
import socket # Bliblioteca built-in do Python
import sys    # Bliblioteca built-in do Python
import re 

# ---------------------------------- Variaveis Globais ----------------------------------
nomeDoPrograma = sys.argv[0]
menuAjuda = f'''
{'#' * 40}
Modo de uso:
{nomeDoPrograma[2:]} <ip> <porta>
    {nomeDoPrograma[2:]} 192.168.0.1 22
{'#' * 40}
'''

try:
    ipServidor = sys.argv[1]    # Primeiro argumento deve ser o IP
    portaServidor = int(sys.argv[2]) # Segundo argumento deve ser a Porta
except (IndexError):
    print(menuAjuda)
    exit()

# Padrão de IP que usuário deve informar
ipPadrao = '^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'

ipCliente = socket.gethostbyname(socket.gethostname())
# --------------------------------------- Funções ---------------------------------------
#
# --------------------------------- Execução do Programa ---------------------------------
# Validar o IP e a porta que o usuário esta informando, verificar se eles são válidos
if (not re.fullmatch(ipPadrao, ipServidor)):
    print('Informe um endereço IP válido no formato: <xxx.xxx.xxx.xxx>')
    exit()
elif (portaServidor > 65535):
    print('Informe uma porta válida entre <0-65535>')
    exit()

cliente = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Cliente IPv4, TCP 
try:
    cliente.connect((ipServidor, portaServidor)) # Conectando ao servidor
except:
    print('Houve um erro de conexão:\nVerifique o IP e a PORTA informada')
    print(f'IP: {ipServidor}\nPorta: {portaServidor}')
    exit()

print('Se quiser encerrar a conexão digite: sair')
while True:
    mensagemCliente = input(f'Cliente <{ipCliente}>: ') + '\n'
    # Cliente encerrou a conexão
    if (mensagemCliente == 'sair\n'):
        cliente.send('Conexão encerrada pelo cliente\n'.encode())
        cliente.close()
        exit()
    cliente.send(mensagemCliente.encode())
    mensagemServidor = cliente.recv(2048).decode()
    print(f'Servidor <{ipServidor}>:', mensagemServidor, end='')
